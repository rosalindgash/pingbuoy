import { requireAuth } from '@/lib/auth'
import { getUserSites } from '@/lib/uptime'
import DashboardLayout from '@/components/dashboard/DashboardLayout'
import UptimeChart from '@/components/dashboard/UptimeChart'
import { BarChart3 } from 'lucide-react'

export default async function UptimePage() {
  const user = await requireAuth()
  const sites = await getUserSites(user.id)

  return (
    <DashboardLayout>
      <div className="space-y-8">
        <div>
          <h1 className="text-3xl font-bold text-gray-900">Uptime Monitoring</h1>
          <p className="text-gray-600">Monitor your websites&apos; uptime and performance metrics</p>
        </div>

        {sites.length === 0 ? (
          <div className="text-center py-12">
            <div className="mx-auto w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mb-4">
              <BarChart3 className="w-12 h-12 text-gray-400" />
            </div>
            <h3 className="text-lg font-medium text-gray-900 mb-2">
              No websites to monitor
            </h3>
            <p className="text-gray-600 mb-6">
              Add websites from your Dashboard to start viewing uptime statistics.
            </p>
            <a
              href="/dashboard"
              className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
            >
              Go to Dashboard
            </a>
          </div>
        ) : (
          <div className="space-y-6">
            {/* Overall Stats */}
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div className="bg-white overflow-hidden shadow rounded-lg">
                <div className="p-5">
                  <div className="flex items-center">
                    <div className="flex-shrink-0">
                      <div className="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center">
                        <span className="text-white text-sm font-medium">
                          {sites.filter(site => site.status === 'up').length}
                        </span>
                      </div>
                    </div>
                    <div className="ml-5 w-0 flex-1">
                      <dl>
                        <dt className="text-sm font-medium text-gray-500 truncate">
                          Sites Online
                        </dt>
                        <dd className="text-lg font-medium text-gray-900">
                          {sites.filter(site => site.status === 'up').length} / {sites.length}
                        </dd>
                      </dl>
                    </div>
                  </div>
                </div>
              </div>

              <div className="bg-white overflow-hidden shadow rounded-lg">
                <div className="p-5">
                  <div className="flex items-center">
                    <div className="flex-shrink-0">
                      <div className="w-8 h-8 bg-red-500 rounded-full flex items-center justify-center">
                        <span className="text-white text-sm font-medium">
                          {sites.filter(site => site.status === 'down').length}
                        </span>
                      </div>
                    </div>
                    <div className="ml-5 w-0 flex-1">
                      <dl>
                        <dt className="text-sm font-medium text-gray-500 truncate">
                          Sites Down
                        </dt>
                        <dd className="text-lg font-medium text-gray-900">
                          {sites.filter(site => site.status === 'down').length} / {sites.length}
                        </dd>
                      </dl>
                    </div>
                  </div>
                </div>
              </div>

              <div className="bg-white overflow-hidden shadow rounded-lg">
                <div className="p-5">
                  <div className="flex items-center">
                    <div className="flex-shrink-0">
                      <div className="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center">
                        <BarChart3 className="w-4 h-4 text-white" />
                      </div>
                    </div>
                    <div className="ml-5 w-0 flex-1">
                      <dl>
                        <dt className="text-sm font-medium text-gray-500 truncate">
                          Total Sites
                        </dt>
                        <dd className="text-lg font-medium text-gray-900">
                          {sites.length}
                        </dd>
                      </dl>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* Individual Site Charts */}
            <div className="space-y-6">
              {sites.map((site) => (
                <div key={site.id} className="bg-white rounded-lg border border-gray-200 p-6">
                  <div className="flex items-center justify-between mb-4">
                    <div>
                      <h3 className="text-lg font-medium text-gray-900">{site.name}</h3>
                      <p className="text-sm text-gray-500">{site.url}</p>
                    </div>
                    <div className="flex items-center">
                      <div className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${
                        site.status === 'up' ? 'bg-green-100 text-green-800' :
                        site.status === 'down' ? 'bg-red-100 text-red-800' :
                        'bg-gray-100 text-gray-800'
                      }`}>
                        {site.status.charAt(0).toUpperCase() + site.status.slice(1)}
                      </div>
                    </div>
                  </div>
                  
                  {site.uptime_logs && site.uptime_logs.length > 0 ? (
                    <UptimeChart
                      siteId={site.id}
                    />
                  ) : (
                    <div className="text-center py-8 text-gray-500">
                      <p className="text-sm">No uptime data available yet</p>
                      <p className="text-xs mt-1">Monitoring will begin shortly</p>
                    </div>
                  )}
                </div>
              ))}
            </div>
          </div>
        )}
      </div>
    </DashboardLayout>
  )
}