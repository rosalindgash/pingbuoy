# ================================================================
# PingBuoy Environment Variables
# ================================================================
# Copy this file to .env.local and fill in your actual values
# NEVER commit .env.local or any .env file with real secrets!
# ================================================================

# ================================================================
# üîê CRITICAL SECRETS - NEVER expose to client!
# ================================================================

# Stripe Secret Keys (Get from: https://dashboard.stripe.com/apikeys)
STRIPE_SECRET_KEY=sk_test_... # REQUIRED: Stripe secret key (starts with sk_test_ or sk_live_)
STRIPE_WEBHOOK_SECRET=whsec_... # REQUIRED: Webhook signing secret (from Stripe webhook settings)

# Stripe Price IDs (Get from: https://dashboard.stripe.com/products)
STRIPE_PRO_MONTHLY_PRICE_ID=price_... # REQUIRED: Price ID for Pro monthly plan
STRIPE_PRO_YEARLY_PRICE_ID=price_... # OPTIONAL: Price ID for Pro yearly plan

# Supabase Service Role Key (Get from: https://supabase.com/dashboard/project/_/settings/api)
SUPABASE_SERVICE_ROLE_KEY=eyJhbGci... # REQUIRED: Service role key - bypasses RLS, NEVER expose!

# Redis/Upstash Credentials (Get from: https://console.upstash.com/)
UPSTASH_REDIS_REST_URL=https://... # REQUIRED: Upstash Redis REST URL
UPSTASH_REDIS_REST_TOKEN=AXm_... # REQUIRED: Upstash Redis REST token

# Email Service Configuration (SMTP for notifications)
EMAIL_HOST=smtp.gmail.com # REQUIRED: SMTP server hostname
EMAIL_PORT=587 # OPTIONAL: SMTP port (default: 587)
EMAIL_USER=your-email@gmail.com # REQUIRED: SMTP username
EMAIL_PASSWORD=your-app-password # REQUIRED: SMTP password or app-specific password
EMAIL_FROM=noreply@yourdomain.com # OPTIONAL: "From" address (defaults to EMAIL_USER)

# Contact Form Email Configuration (can be same as above or different SMTP)
SMTP_HOST=smtp.gmail.com # REQUIRED: Contact form SMTP hostname
SMTP_PORT=587 # OPTIONAL: Contact form SMTP port (default: 587)
SMTP_SECURE=false # OPTIONAL: Use TLS/SSL (true for port 465, false for others)
SMTP_USER=your-email@gmail.com # REQUIRED: Contact form SMTP username
SMTP_PASS=your-app-password # REQUIRED: Contact form SMTP password
SMTP_FROM=contact@yourdomain.com # OPTIONAL: Contact form "from" address (defaults to SMTP_USER)
CONTACT_EMAIL=support@pingbuoy.com # OPTIONAL: Where contact form submissions are sent

# Admin/Founder Configuration
FOUNDER_EMAIL=admin@yourdomain.com # REQUIRED: Founder email for admin access (must match user with founder plan)
# NOTE: This should NEVER have NEXT_PUBLIC_ prefix - admin email must be server-side only

# ================================================================
# üåê PUBLIC VARIABLES - Safe to expose to client (NEXT_PUBLIC_)
# ================================================================

# Supabase Public Configuration
NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co # REQUIRED: Supabase project URL
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGci... # REQUIRED: Supabase anon/public key (RLS enforced)

# Stripe Public Key
NEXT_PUBLIC_STRIPE_PUBLIC_KEY=pk_test_... # REQUIRED: Stripe publishable key (starts with pk_test_ or pk_live_)

# Application URLs
NEXT_PUBLIC_APP_URL=http://localhost:4000 # REQUIRED: Base URL of your application
NEXT_PUBLIC_SITE_URL=http://localhost:4000 # OPTIONAL: Alternative site URL for emails (defaults to APP_URL)

# ================================================================
# üîß OPTIONAL CONFIGURATION
# ================================================================

# Node Environment (auto-set by framework)
NODE_ENV=development # AUTO: development | production | test

# Application URLs (alternative/legacy)
APP_URL=http://localhost:4000 # OPTIONAL: Falls back to NEXT_PUBLIC_APP_URL
NEXTAUTH_URL=http://localhost:4000 # OPTIONAL: Required for authentication redirects

# Security & CORS Configuration
ALLOWED_ORIGINS=http://localhost:4000,https://yourdomain.com # OPTIONAL: Comma-separated allowed origins (default: *)
RATE_LIMIT_ENABLED=true # OPTIONAL: Enable rate limiting (default: true)

# Admin Notifications
ADMIN_EMAILS=admin@yourdomain.com,backup@yourdomain.com # OPTIONAL: Comma-separated admin emails for notifications

# Analytics & Logging
STORE_ANALYTICS_EVENTS=false # OPTIONAL: Store analytics events in database (default: false)
LOG_SECURITY_WEBHOOK_URL=https://your-webhook.com # OPTIONAL: Security alert webhook URL

# Cron Job Authentication (if using Vercel Cron)
CRON_SECRET=your-secret-here # OPTIONAL: Secret for authenticating cron job requests

# Alternative Email Service (Resend)
RESEND_API_KEY=re_... # OPTIONAL: Resend API key (alternative to SMTP)

# ================================================================
# üõ°Ô∏è SSRF PROTECTION & SECURITY CONFIGURATION
# ================================================================

# SSRF Security Policy
SSRF_SECURITY_POLICY=strict # OPTIONAL: Security policy level (strict | moderate | permissive) - default: strict

# SSRF Monitoring Permissions (ONLY change if you know what you're doing!)
SSRF_ALLOW_PRIVATE_IPS=false # OPTIONAL: Allow monitoring private IP ranges (default: false) - SECURITY RISK if true
SSRF_ALLOW_LOCALHOST=false # OPTIONAL: Allow monitoring localhost (default: false) - SECURITY RISK if true
SSRF_ALLOW_METADATA=false # OPTIONAL: Allow cloud metadata endpoints (default: false) - SECURITY RISK if true

# SSRF Monitoring Configuration
SSRF_MONITORING_TIMEOUT=15000 # OPTIONAL: Request timeout in milliseconds (default: 15000)
SSRF_MONITORING_MAX_REDIRECTS=3 # OPTIONAL: Maximum HTTP redirects to follow (default: 3)
SSRF_MONITORING_PORTS=80,443 # OPTIONAL: Allowed ports for monitoring (default: 80,443)

# ================================================================
# üö® SECURITY WARNINGS
# ================================================================

# ‚ö†Ô∏è NEVER commit this file with real values!
# ‚ö†Ô∏è NEVER expose server-only secrets to the client
# ‚ö†Ô∏è Only variables starting with NEXT_PUBLIC_ are exposed to the browser
# ‚ö†Ô∏è Service role key bypasses ALL RLS policies - treat like root password
# ‚ö†Ô∏è Stripe webhook secret is used to verify webhook authenticity
# ‚ö†Ô∏è Redis token provides full access to your Redis instance
# ‚ö†Ô∏è Email passwords should use app-specific passwords, not your main password
# ‚ö†Ô∏è FOUNDER_EMAIL must match a user with "founder" plan in the database
# ‚ö†Ô∏è NEVER use NEXT_PUBLIC_FOUNDER_EMAIL - this would expose admin email to client

# ================================================================
# üìã REQUIRED VARIABLES CHECKLIST
# ================================================================

# Minimum Required for Development:
# ‚úì NEXT_PUBLIC_SUPABASE_URL
# ‚úì NEXT_PUBLIC_SUPABASE_ANON_KEY
# ‚úì SUPABASE_SERVICE_ROLE_KEY
# ‚úì STRIPE_SECRET_KEY
# ‚úì STRIPE_WEBHOOK_SECRET
# ‚úì STRIPE_PRO_MONTHLY_PRICE_ID
# ‚úì NEXT_PUBLIC_STRIPE_PUBLIC_KEY
# ‚úì UPSTASH_REDIS_REST_URL
# ‚úì UPSTASH_REDIS_REST_TOKEN
# ‚úì EMAIL_HOST
# ‚úì EMAIL_USER
# ‚úì EMAIL_PASSWORD
# ‚úì SMTP_HOST
# ‚úì SMTP_USER
# ‚úì SMTP_PASS
# ‚úì FOUNDER_EMAIL
# ‚úì NEXT_PUBLIC_APP_URL

# ================================================================
# üîó WHERE TO GET CREDENTIALS
# ================================================================

# Supabase:
# 1. Go to https://supabase.com/dashboard/project/_/settings/api
# 2. Copy "URL" ‚Üí NEXT_PUBLIC_SUPABASE_URL
# 3. Copy "anon public" key ‚Üí NEXT_PUBLIC_SUPABASE_ANON_KEY
# 4. Copy "service_role" key ‚Üí SUPABASE_SERVICE_ROLE_KEY (KEEP SECRET!)

# Stripe:
# 1. Go to https://dashboard.stripe.com/apikeys
# 2. Copy "Secret key" ‚Üí STRIPE_SECRET_KEY
# 3. Copy "Publishable key" ‚Üí NEXT_PUBLIC_STRIPE_PUBLIC_KEY
# 4. Go to https://dashboard.stripe.com/webhooks
# 5. Create webhook endpoint: https://yourdomain.com/api/webhooks/stripe
# 6. Copy "Signing secret" ‚Üí STRIPE_WEBHOOK_SECRET
# 7. Go to https://dashboard.stripe.com/products
# 8. Create Pro plan product, copy price IDs

# Upstash Redis:
# 1. Go to https://console.upstash.com/
# 2. Create new Redis database
# 3. Copy "UPSTASH_REDIS_REST_URL"
# 4. Copy "UPSTASH_REDIS_REST_TOKEN"

# Gmail SMTP (for development):
# 1. Enable 2-factor authentication on your Google account
# 2. Go to https://myaccount.google.com/apppasswords
# 3. Create "App Password" for "Mail"
# 4. Use this password for EMAIL_PASSWORD and SMTP_PASS

# ================================================================
# üìñ DOCUMENTATION
# ================================================================

# For full documentation, see:
# - Environment setup: README.md
# - Security audit: ENVIRONMENT-VARIABLES-AUDIT.md
# - Stripe webhook setup: STRIPE-WEBHOOK-SECURITY-AUDIT.md

# ================================================================
# üéØ QUICK START
# ================================================================

# 1. Copy this file: cp .env.example .env.local
# 2. Fill in all REQUIRED variables above
# 3. Test: npm run dev
# 4. Visit: http://localhost:4000

# ================================================================
