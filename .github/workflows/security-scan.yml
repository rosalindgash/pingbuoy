name: Security Scan

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * 1' # Weekly on Mondays

jobs:
  security:
    runs-on: ubuntu-latest
    name: Security Scan
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: false

      - name: Run ESLint security rules
        run: npx eslint . --ext .ts,.tsx,.js,.jsx --format json --output-file eslint-report.json || true

      - name: Install Semgrep
        run: |
          pip install semgrep

      - name: Run Semgrep security scan
        run: |
          semgrep --config=auto --json --output=semgrep-report.json .
        continue-on-error: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

      - name: Supply Chain Security - SBOM Generation
        run: |
          npm install -g @cyclonedx/cyclonedx-npm
          cyclonedx-npm --output-format json --output-file sbom.json

      - name: Supply Chain Security - License Check
        run: |
          npm install -g license-checker
          license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;0BSD;Apache-2.0 WITH LLVM-exception' --excludePrivatePackages

      - name: AI/ML Security Scan (if applicable)
        run: |
          # Check for potential AI/ML security issues
          grep -r "openai\|anthropic\|claude\|gpt\|llm\|ml\|ai" src/ || echo "No AI/ML code detected"
        continue-on-error: true

      - name: Upload security scan artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-scan-results
          path: |
            eslint-report.json
            semgrep-report.json
            trivy-results.sarif